---
title: "Homework 4"
author: "Celine Park"
format: html
editor: visual
---

#1. 
Biological Terms: 
Null: There is no significant relationship between fish length and fish weight for trout perch across all sample years
Alternate: There is a significant relationship between fish length and fish weight for trout perch across all sample years.

```{r}
library(here)
library(ggplot2)
library(janitor)
library(tidyverse)
library(readxl)
library(tidyverse)
library(performance)
library(broom)
library(flextable)
library(ggeffects)
library(car)
library(naniar)
```


```{r}
#1.
fish_length <- read.csv(here("fish_length.csv")) |>
  clean_names() |>
  filter(spname == "TROUTPERCH") |>
  select(spname, length, weight) |>
  mutate_at(2:3, as.numeric)
  
 

```


```{r}
#2.
ggplot(data = fish_length, aes(x = weight, y = length)) +
  geom_point() +
  labs(caption = "missing data skews the relationship between trout weight and length when there could be a stronger/weaker correlation with more data")

gg_miss_var(fish_length)
```


```{r}
#3. 
test <- lm(weight~length, data = fish_length)
test
```

```{r}
#4. 
par(mfrow = c(2,2))
plot(test)

#The residuals vs. fitted plots
```


#5.


```{r}
#6.
summary(test)
```

```{r}
#7. 
model_test <- summary(test)
model_squares <- anova(test)

model_squares_table <- tidy(model_squares) %>% 
  # round the sum of squares and mean squares columns to have 5 digits (could be less)
  mutate(across(sumsq:meansq, ~ round(.x, digits = 5))) %>% 
  # round the F-statistic to have 1 digit
  mutate(statistic = round(statistic, digits = 1)) %>% 
  # replace the very very very small p value with < 0.001
  mutate(p.value = case_when(
    p.value < 0.001 ~ "< 0.001"
  )) %>% 
  # make the data frame a flextable object
  flextable() %>% 
  # change the header labels to be meaningful
  set_header_labels(df = "Degrees of Freedom", 
                    sumsq = "Sum of squares",
                    meansq = "Mean squares",
                    statistic = "F-statistic",
                    p.value = "p-value")

model_squares_table
```


```{r}
#10
predictions <- ggpredict(test, terms = "length")

predictions
```

```{r}
plot_predictions <- ggplot(data = fish_length, 
                           aes(length, y = weight)) +
  # first plot the underlying data from maples_data
  geom_point() +
  # then plot the predictions
  geom_line(data = predictions, 
            aes(x = x, y = predicted), 
            color = "blue", linewidth = 1) +
  # then plot the 95% confidence interval from ggpredict
  geom_ribbon(data = predictions, 
              aes(x = x, y = predicted, ymin = conf.low, ymax = conf.high), 
              alpha = 0.2) +
  # theme and meaningful labels
  theme_bw() +
  labs(x = "Length",
       y = "Weight")

plot_predictions
```



